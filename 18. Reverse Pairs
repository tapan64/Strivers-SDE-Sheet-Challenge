def merge(low, mid, high, arr):
    j, cnt = mid + 1, 0
    for i in range(low, mid + 1):
        while j <= high and arr[i] > 2 * arr[j]:
            j += 1
        cnt += j - (mid + 1)
    i, j = low, mid + 1
    temp = []
    while i <= mid and j <= high:
        if arr[i] < arr[j]:
            temp.append(arr[i])
            i += 1
        else:
            temp.append(arr[j])
            j += 1
    while i <= mid:
        temp.append(arr[i])
        i += 1
    while j <= high:
        temp.append(arr[j])
        j += 1
    for i in range(low, high + 1):
        arr[i] = temp[i - low]
    return cnt

def mergeSort(low, high, arr):
    if low == high:
        return 0
    mid = (low + high) // 2
    cnt = mergeSort(low, mid, arr)
    cnt += mergeSort(mid + 1, high, arr)
    cnt += merge(low, mid, high, arr)
    return cnt

def reversePairs(arr, n):
    return mergeSort(0, n - 1, arr)
