# using two sum problem, after fixing 2 pointers

# def twoSum(l, r, arr, target):
#     st = set()
#     for i in range(l, r + 1):
#         if target - arr[i] in st:
#             return True
#         st.add(arr[i])
#     return False

# def fourSum(arr, target):
#     n = len(arr)
#     for i in range(n - 3):
#         for j in range(i + 1, n - 2):
#             if twoSum(j + 1, n - 1, arr, target - arr[i] - arr[j]):
#                 return 'Yes'
#     return 'No'


# using 2 pointer, after fixing 2 pointers

def fourSum(arr, target):
    arr.sort()
    n = len(arr)
    for i in range(n - 3):
        if i > 0 and arr[i] == arr[i - 1]:
            continue
        for j in range(i + 1, n - 2):
            if j > i + 1 and arr[j] == arr[j - 1]:
                continue
            k, l = j + 1, n - 1
            while k < l:
                sm = arr[i] + arr[j] + arr[k] + arr[l]
                if sm == target:
                    return 'Yes'
                elif sm > target:
                    l -= 1
                else:
                    k += 1
    return 'No'
