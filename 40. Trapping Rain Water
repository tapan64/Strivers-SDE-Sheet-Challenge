# def getTrappedWater(arr, n) :
# 	if n < 3:
# 		return 0
# 	leftMaxArr, rightMaxArr = [0] * n, [0] * n
# 	leftMax, rightMax = arr[0], arr[n - 1]
# 	for i in range(1, n - 1):
# 		if leftMax > arr[i]:
# 			leftMaxArr[i] = leftMax
# 		leftMax = max(leftMax, arr[i])
# 	for i in range(n - 2, 0, -1):
# 		if rightMax > arr[i]:
# 			rightMaxArr[i] = rightMax
# 		rightMax = max(rightMax, arr[i])
# 	res = 0
# 	for i in range(1, n - 1):
# 		if leftMaxArr[i] > arr[i] and arr[i] < rightMaxArr[i]:
# 			res += min(leftMaxArr[i], rightMaxArr[i]) - arr[i]
# 	return res

def getTrappedWater(arr, n) :
	low, high = 0, n - 1
	leftMax = rightMax = 0
	res = 0
	while low <= high:
		if arr[low] <= arr[high]:
			if arr[low] >= leftMax:
				leftMax = arr[low]
			else:
				res += leftMax - arr[low]
			low += 1
		else:
			if arr[high] > rightMax:
				rightMax = arr[high]
			else:
				res += rightMax - arr[high]
			high -= 1
	return res
