from collections import deque
def serializeTree(root):
    res = ''
    que = deque([root])
    while que:
        node = que.popleft()
        if node:
            res += str(node.data) + ' '
            que.append(node.left)
            que.append(node.right)
        else:
            res += '-1' + ' '
    return res

def deserializeTree(serialized):
    arr = serialized.split()
    if arr[0] == '-1':
        return None
    root = TreeNode(int(arr[0]))
    que = deque([root])
    for i in range(1, len(arr), 2):
        node = que.popleft()
        num = int(arr[i])
        node.left = None if num == -1 else TreeNode(num)
        if node.left:
            que.append(node.left)
        num = int(arr[i + 1])
        node.right = None if num == -1 else TreeNode(num)
        if node.right:
            que.append(node.right)
    return root
